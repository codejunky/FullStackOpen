{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","searchFilter","handleOnChange","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleOnSubmit","onSubmit","event","preventDefault","type","Persons","people","handleDeleteBtn","map","person","key","name","number","onClick","id","Notification","data","message","className","axios","get","then","post","delete","newData","put","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchFilter","notificationMessage","setNotificationMessage","useEffect","peopleService","setNotification","setTimeout","filteredPersons","filter","toLowerCase","includes","target","find","p","window","confirm","catch","response","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAYeA,EAVA,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,eAAhB,OACX,sDAEI,2BACIC,MAAOF,EACPG,SAAUF,MCmBPG,EAxBI,SAAC,GAEd,IADAC,EACD,EADCA,QAASC,EACV,EADUA,UAAWC,EACrB,EADqBA,iBAAkBC,EACvC,EADuCA,mBAAoBC,EAC3D,EAD2DA,eAQ5D,OACI,0BAAMC,SAPK,SAACC,GACZA,EAAMC,iBAENH,EAAeJ,EAASC,KAKpB,sCACU,2BAAOJ,MAAOG,EAASF,SAAUI,KAE3C,wCACY,2BAAOL,MAAOI,EAAWH,SAAUK,KAE/C,6BACI,4BAAQK,KAAK,UAAb,UCPDC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,gBAAX,OACZ,6BACKD,EAAOE,KAAI,SAAAC,GAAM,OACd,yBAAKC,IAAKD,EAAOE,MACZF,EAAOE,KADZ,IACmBF,EAAOG,OAD1B,QAEI,4BAAQC,QAAS,kBAAMN,EAAgBE,EAAOK,MAA9C,gBCODC,EAZM,SAAC,GAAoC,IAAD,IAAjCC,KAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,UACpC,OAAKD,EAKD,yBAAKC,UAAWA,GACXD,GALE,M,gBCoBA,EApBA,WACX,OAAOE,IACFC,IAJQ,gBAKRC,MAAK,qBAAGL,SAiBF,EAdG,SAAAA,GACd,OAAOG,IACFG,KAVQ,eAUON,GACfK,MAAK,qBAAGL,SAWF,EAFM,SAAAF,GAAE,OAAIK,IAAMI,OAAN,UApBV,eAoBU,YAA4BT,KAExC,EARM,SAACA,EAAIU,GAAL,OACjBL,IACKM,IADL,UAfa,eAeb,YACwBX,GAAMU,GACzBH,MAAK,qBAAGL,SC4GFU,EAtHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAET/B,EAFS,KAEAkC,EAFA,OAGkBH,mBAAS,IAH3B,mBAGT9B,EAHS,KAGEkC,EAHF,OAIwBJ,mBAAS,IAJjC,mBAITpC,EAJS,KAIKyC,EAJL,OAKsCL,mBAAS,CAAEV,QAAS,KAAMC,UAAW,OAL3E,mBAKTe,EALS,KAKYC,EALZ,KAQhBC,qBAAU,WACRC,IAEGf,MAAK,SAAAL,GACJa,EAAWb,QAEd,IAEH,IAUMqB,EAAkB,SAACpB,EAASb,GAChC8B,EAAuB,CACrBjB,UACAC,UAAoB,YAATd,EAAqB,UAAY,UAG9CkC,YAAW,kBAAMJ,EAAuB,CAAEjB,QAAS,KAAMC,UAAW,SAAS,MAuDzEqB,EACJhD,EAAeqC,EAAQY,QAAO,qBAAG7B,KAAgB8B,cAAcC,SAASnD,EAAakD,kBAAkBb,EAEzG,OACE,6BACE,yCAEA,kBAAC,EAAD,CAAcZ,KAAMiB,IAEpB,kBAAC,EAAD,CACE1C,aAAcA,EACdC,eAjByB,SAAAU,GAC7B,IAAMsC,EAAStC,EAAMyC,OAAOlD,MAE5BuC,EAAgBQ,MAiBd,yCAEA,kBAAC,EAAD,CACE5C,QAASA,EACTC,UAAWA,EACXC,iBA1FmB,SAAAI,GACvB,IAAMS,EAAOT,EAAMyC,OAAOlD,MAC1BqC,EAAWnB,IAyFPZ,mBAtFqB,SAAAG,GACzB,IAAMU,EAASV,EAAMyC,OAAOlD,MAC5BsC,EAAanB,IAqFTZ,eAzEiB,SAACW,EAAMC,GAC5B,IAAMH,EAASmB,EAAQgB,MAAK,SAAAC,GAAC,OAAIA,EAAElC,OAASA,OACvBF,EAGfqC,OAAOC,QAAP,UAAkBpC,EAAlB,4EACFyB,EACgB3B,EAAOK,GAAI,CAAEH,OAAMC,WAChCS,MAAK,SAAAL,GACJa,EAAWD,EAAQpB,KAAI,SAAAqC,GAAC,OAAIA,EAAElC,OAASA,EAAOK,EAAO6B,MACrDR,EAAgB,WAAD,OAAY1B,GAAQ,cAIzCyB,EACa,CAAEzB,OAAMC,WAClBS,MAAK,SAAAL,GACJa,EAAW,GAAD,mBAAKD,GAAL,CAAcZ,KACxBqB,EAAgB,SAAD,OAAU1B,GAAQ,cAElCqC,OAAM,gBAAehC,EAAf,EAAGiC,SAAYjC,KAAf,OAA4BqB,EAAgBrB,EAAKkC,MAAO,YAGnEpB,EAAW,IACXC,EAAa,OAoDX,uCAEA,kBAAC,EAAD,CAASzB,OAAQiC,EAAiBhC,gBAnDX,SAAAO,GACzB,IAAML,EAASmB,EAAQgB,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAOA,KAEtCgC,OAAOC,QAAP,iBAAyBtC,EAAOE,KAAhC,QACFyB,EACgBtB,GACbO,MAAK,WACJQ,EAAWD,EAAQY,QAAO,SAAAK,GAAC,OAAIA,EAAE/B,KAAOA,SAEzCkC,OAAM,WACLX,EAAgB,kBAAD,OACK5B,EAAOE,KADZ,yCAEb,SAEFkB,EAAWD,EAAQY,QAAO,SAAAK,GAAC,OAAIA,EAAE/B,KAAOL,EAAOK,e,MC9EzDqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d6d54970.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchFilter, handleOnChange}) => (\n    <div>\n        filter shown with &nbsp;\n        <input \n            value={searchFilter} \n            onChange={handleOnChange} \n        />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (\n    { newName, newNumber, handleNameChange, handleNumberChange, handleOnSubmit }\n) => {\n    const submit = (event) => {\n        event.preventDefault()\n\n        handleOnSubmit(newName, newNumber)\n    }   \n\n    return (\n        <form onSubmit={submit}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ people, handleDeleteBtn }) => (\n    <div>\n        {people.map(person => (\n            <div key={person.name}>\n                {person.name} {person.number} &nbsp;\n                <button onClick={() => handleDeleteBtn(person.id)}>delete</button>\n            </div>\n        ))}\n    </div>\n)\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ data: {message, className} }) => {\n    if (!message) {\n        return null\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst BASE_URL = \"/api/persons\"\n\nconst getAll = () => {\n    return axios\n        .get(BASE_URL)\n        .then(({ data }) => data)\n}\n\nconst addPerson = data => {\n    return axios\n        .post(BASE_URL, data)\n        .then(({ data }) => data)\n}\n\nconst updatePerson = (id, newData) => (\n    axios\n        .put(`${BASE_URL}/${id}`, newData)\n        .then(({ data }) => data)\n)\n\nconst deletePerson = id => axios.delete(`${BASE_URL}/${id}`)\n\nexport default {\n    getAll,\n    addPerson,\n    deletePerson,\n    updatePerson\n}","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nimport peopleService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchFilter, setSearchFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState({ message: null, className: null })\n\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n\n  const handleNameChange = event => {\n    const name = event.target.value\n    setNewName(name)\n  }\n\n  const handleNumberChange = event => {\n    const number = event.target.value\n    setNewNumber(number)\n  }\n\n  const setNotification = (message, type) => {\n    setNotificationMessage({\n      message,\n      className: type === 'success' ? 'success' : 'error'\n    })\n\n    setTimeout(() => setNotificationMessage({ message: null, className: null }), 5000)\n  }\n\n  const handleOnSubmit = (name, number) => {\n    const person = persons.find(p => p.name === name)\n    const nameExists = !!person\n\n    if (nameExists) {\n      if (window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)) {\n        peopleService\n          .updatePerson(person.id, { name, number })\n          .then(data => {\n            setPersons(persons.map(p => p.name === name ? data : p))\n            setNotification(`Updated ${name}`, 'success')\n          })\n      }\n    } else {\n      peopleService\n        .addPerson({ name, number })\n        .then(data => {\n          setPersons([...persons, data])\n          setNotification(`Added ${name}`, 'success')\n        })\n        .catch(({ response: { data } }) => setNotification(data.error, 'error'))\n    }\n\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const handleDeletePerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      peopleService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(() => {\n          setNotification(\n            `Information of ${person.name} has already been removed from server`,\n            'error'\n          )\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  const handleNameFilterChange = event => {\n    const filter = event.target.value\n\n    setSearchFilter(filter)\n  }\n\n  const filteredPersons =\n    searchFilter ? persons.filter(({ name }) => name.toLowerCase().includes(searchFilter.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification data={notificationMessage} />\n\n      <Filter\n        searchFilter={searchFilter}\n        handleOnChange={handleNameFilterChange}\n      />\n\n      <h2>Add a new</h2>\n\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleOnSubmit={handleOnSubmit}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons people={filteredPersons} handleDeleteBtn={handleDeletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}